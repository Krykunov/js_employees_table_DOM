{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nlet headers, tbody, rows;\n\nconst init = () => {\n  headers = [...body.querySelectorAll('th')];\n  tbody = body.querySelector('tbody');\n  rows = [...tbody.querySelectorAll('tr')];\n};\n\ninit();\n\nconst currencyFormat = (number) =>\n  '$' + new Intl.NumberFormat('en-US').format(number);\n\n// Add active class to row when clicked\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    rows.forEach((r) => r.classList.remove('active'));\n    row.classList.toggle('active');\n  });\n});\n\nlet ASC = true;\nlet currentHeader;\n\n// Sort table by column\nheaders.forEach((header, i) => {\n  header.addEventListener('click', (e) => {\n    ASC = !ASC;\n\n    if (currentHeader !== i) {\n      ASC = true;\n    }\n    currentHeader = i;\n\n    rows.sort((a, b) => {\n      const cellA = a.querySelectorAll('td')[i].textContent;\n      const cellB = b.querySelectorAll('td')[i].textContent;\n\n      const checkNumberCellA = strToNumber(cellA);\n      const checkNumberCellB = strToNumber(cellB);\n\n      if (Number(checkNumberCellA)) {\n        return ASC\n          ? checkNumberCellA - checkNumberCellB\n          : checkNumberCellB - checkNumberCellA;\n      }\n\n      return ASC ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\nconst formFields = {\n  name: {\n    label: 'Name',\n    name: 'name',\n    type: 'text',\n    'data-qa': 'name',\n    validation: {\n      minLength: 4,\n    },\n  },\n  position: {\n    label: 'Position',\n    name: 'position',\n    type: 'text',\n    'data-qa': 'position',\n  },\n  office: {\n    label: 'Office',\n    name: 'office',\n    'data-qa': 'office',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  age: {\n    label: 'Age',\n    name: 'age',\n    type: 'number',\n    'data-qa': 'age',\n    validation: {\n      min: 18,\n      max: 90,\n    },\n  },\n  salary: {\n    label: 'Salary',\n    name: 'salary',\n    type: 'number',\n    'data-qa': 'salary',\n  },\n  startDate: '',\n};\n\nconst strToNumber = (n) => Number(n.replace(/[^0-9.-]+/g, ''));\n\n// Add new employee form\n\nconst createForm = (fields) => {\n  const formEl = document.createElement('form');\n\n  formEl.classList.add('new-employee-form');\n\n  for (const key in fields) {\n    if (fields[key]) {\n      const label = document.createElement('label');\n\n      label.textContent = `${fields[key].label}: `;\n\n      let field = document.createElement('input');\n\n      if (fields[key].hasOwnProperty('options')) {\n        field = document.createElement('select');\n\n        for (const option of fields[key].options) {\n          const optionEl = document.createElement('option');\n\n          optionEl.value = option;\n          optionEl.textContent = option;\n          field.appendChild(optionEl);\n        }\n      }\n\n      label.appendChild(field);\n\n      field.setAttribute('name', fields[key].name);\n      field.setAttribute('type', fields[key].type);\n      field.setAttribute('data-qa', fields[key]['data-qa']);\n      field.setAttribute('min', fields[key].validation?.min);\n      field.setAttribute('max', fields[key].validation?.max);\n      field.setAttribute('minlength', fields[key].validation?.minLength);\n      field.setAttribute('required', true);\n      formEl.appendChild(label);\n    }\n  }\n\n  return formEl;\n};\n\nconst showNotification = (type, message) => {\n  const notification = document.createElement('div');\n\n  notification.innerHTML = `<h2 class='title'>${message}</h2>`;\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\nconst createRow = (employee) => {\n  const row = document.createElement('tr');\n\n  for (const key in employee) {\n    const cell = document.createElement('td');\n\n    cell.textContent = employee[key];\n    row.appendChild(cell);\n  }\n\n  tbody.appendChild(row);\n};\n\nconst submitHandler = (e) => {\n  if (!form.checkValidity()) {\n    showNotification('error', 'Error: Form is not valid');\n\n    return;\n  }\n\n  const formData = new FormData(form);\n  const employee = {};\n\n  for (const [key, value] of formData.entries()) {\n    if (key === 'salary') {\n      employee[key] = currencyFormat(value);\n      continue;\n    }\n    employee[key] = value;\n  }\n\n  createRow(employee);\n\n  showNotification('success', 'Employee added successfully');\n\n  init();\n\n  form.reset();\n};\n\nconst createSubmitButton = () => {\n  const submit = document.createElement('button');\n\n  submit.setAttribute('type', 'submit');\n  submit.setAttribute('form', 'new-employee-form');\n  submit.addEventListener('click', submitHandler);\n\n  submit.textContent = 'Save to table';\n\n  return submit;\n};\n\nconst form = createForm(formFields);\n\nconst submitBtn = createSubmitButton();\n\nform.appendChild(submitBtn);\n\nbody.appendChild(form);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}