{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAEhC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAW,EAAG,EAAM,gBAAgB,CAAC,OACrC,EAAQ,EAAM,aAAa,CAAC,SAC5B,EAAQ,EAAG,EAAM,gBAAgB,CAAC,OAEhC,EAAO,WAEX,EAAW,EAAG,AADd,CAAA,EAAQ,SAAS,aAAa,CAAC,QAA/B,EACoB,gBAAgB,CAAC,OAErC,EAAQ,EAAG,AADX,CAAA,EAAQ,EAAM,aAAa,CAAC,QAA5B,EACiB,gBAAgB,CAAC,MACpC,EAOA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,WAC5B,EAAK,OAAO,CAAC,SAAC,CAAd,EAAoB,OAAA,EAAE,SAAS,CAAC,MAAM,CAAC,S,GACvC,EAAI,SAAS,CAAC,MAAM,CAAC,SACvB,EACF,GAEA,IAAI,EAAM,CAAA,EAIV,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,SAAC,CAAlC,EACE,EAAM,CAAC,EAEH,IAAkB,GACpB,CAAA,EAAM,CAAA,CADR,EAGA,EAAgB,EAEhB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAC/C,EAAQ,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,QAErD,AAAI,OAAO,EAAa,IACf,EACH,EAAa,GAAS,EAAa,GACnC,EAAa,GAAS,EAAa,GAGl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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar body = document.querySelector(\"body\");\nvar table = document.querySelector(\"table\");\nvar headers = _to_consumable_array(table.querySelectorAll(\"th\"));\nvar tbody = table.querySelector(\"tbody\");\nvar rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\nvar init = function() {\n    table = document.querySelector(\"table\");\n    headers = _to_consumable_array(table.querySelectorAll(\"th\"));\n    tbody = table.querySelector(\"tbody\");\n    rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n};\nvar currencyFormat = function(number) {\n    return \"$\" + new Intl.NumberFormat(\"en-US\").format(number);\n};\n// Add active class to row when clicked\nrows.forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        rows.forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.toggle(\"active\");\n    });\n});\nvar ASC = true;\nvar currentHeader;\n// Sort table by column\nheaders.forEach(function(header, i) {\n    header.addEventListener(\"click\", function(e) {\n        ASC = !ASC;\n        if (currentHeader !== i) ASC = true;\n        currentHeader = i;\n        rows.sort(function(a, b) {\n            var cellA = a.querySelectorAll(\"td\")[i].textContent;\n            var cellB = b.querySelectorAll(\"td\")[i].textContent;\n            if (Number(numberFormat(cellA))) return ASC ? numberFormat(cellA) - numberFormat(cellB) : numberFormat(cellB) - numberFormat(cellA);\n            return ASC ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\nvar formFields = {\n    name: {\n        label: \"Name\",\n        name: \"name\",\n        type: \"text\",\n        \"data-qa\": \"name\",\n        validation: {\n            minLength: 4\n        }\n    },\n    position: {\n        label: \"Position\",\n        name: \"position\",\n        type: \"text\",\n        \"data-qa\": \"position\"\n    },\n    office: {\n        label: \"Office\",\n        name: \"office\",\n        \"data-qa\": \"office\",\n        options: [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ]\n    },\n    age: {\n        label: \"Age\",\n        name: \"age\",\n        type: \"number\",\n        \"data-qa\": \"age\",\n        validation: {\n            min: 18,\n            max: 90\n        }\n    },\n    salary: {\n        label: \"Salary\",\n        name: \"salary\",\n        type: \"number\",\n        \"data-qa\": \"salary\"\n    },\n    startDate: \"\"\n};\nvar numberFormat = function(n) {\n    return Number(n.replace(/[^0-9.-]+/g, \"\"));\n};\n// Add new employee form\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nfor(var key in formFields)if (formFields[key]) {\n    var _formFields_key_validation, _formFields_key_validation1, _formFields_key_validation2;\n    var label = document.createElement(\"label\");\n    label.textContent = \"\".concat(formFields[key].label, \": \");\n    var field = document.createElement(\"input\");\n    if (formFields[key].hasOwnProperty(\"options\")) {\n        field = document.createElement(\"select\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = formFields[key].options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var option = _step.value;\n                var optionEl = document.createElement(\"option\");\n                optionEl.value = option;\n                optionEl.textContent = option;\n                field.appendChild(optionEl);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    label.appendChild(field);\n    field.setAttribute(\"name\", formFields[key].name);\n    field.setAttribute(\"type\", formFields[key].type);\n    field.setAttribute(\"data-qa\", formFields[key][\"data-qa\"]);\n    field.setAttribute(\"min\", (_formFields_key_validation = formFields[key].validation) === null || _formFields_key_validation === void 0 ? void 0 : _formFields_key_validation.min);\n    field.setAttribute(\"max\", (_formFields_key_validation1 = formFields[key].validation) === null || _formFields_key_validation1 === void 0 ? void 0 : _formFields_key_validation1.max);\n    field.setAttribute(\"minlength\", (_formFields_key_validation2 = formFields[key].validation) === null || _formFields_key_validation2 === void 0 ? void 0 : _formFields_key_validation2.minLength);\n    field.setAttribute(\"required\", true);\n    form.appendChild(label);\n}\nvar showNotification = function(type, message) {\n    var notification = document.createElement(\"div\");\n    notification.innerHTML = \"<h2 class='title'>\".concat(message, \"</h2>\");\n    notification.classList.add(\"notification\", type);\n    notification.setAttribute(\"data-qa\", \"notification\");\n    body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 5000);\n};\nvar submitHandler = function(e) {\n    e.preventDefault();\n    if (!form.checkValidity()) {\n        showNotification(\"error\", \"Error: Form is not valid\");\n        return;\n    }\n    var formData = new FormData(form);\n    var employee = {};\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n            if (key === \"salary\") {\n                employee[key] = currencyFormat(value);\n                continue;\n            }\n            employee[key] = value;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var row = document.createElement(\"tr\");\n    for(var key1 in employee){\n        var cell = document.createElement(\"td\");\n        cell.textContent = employee[key1];\n        row.appendChild(cell);\n    }\n    showNotification(\"success\", \"Employee added successfully\");\n    tbody.appendChild(row);\n    init();\n    form.reset();\n};\nvar submit = document.createElement(\"button\");\nsubmit.setAttribute(\"type\", \"submit\");\nsubmit.setAttribute(\"form\", \"new-employee-form\");\nsubmit.addEventListener(\"click\", submitHandler);\nsubmit.textContent = \"Save to table\";\nform.appendChild(submit);\nbody.appendChild(form);\n\n//# sourceMappingURL=index.8b366593.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\n\nlet table = document.querySelector('table');\nlet headers = [...table.querySelectorAll('th')];\nlet tbody = table.querySelector('tbody');\nlet rows = [...tbody.querySelectorAll('tr')];\n\nconst init = () => {\n  table = document.querySelector('table');\n  headers = [...table.querySelectorAll('th')];\n  tbody = table.querySelector('tbody');\n  rows = [...tbody.querySelectorAll('tr')];\n};\n\nconst currencyFormat = (number) =>\n  '$' + new Intl.NumberFormat('en-US').format(number);\n\n// Add active class to row when clicked\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    rows.forEach((r) => r.classList.remove('active'));\n    row.classList.toggle('active');\n  });\n});\n\nlet ASC = true;\nlet currentHeader;\n\n// Sort table by column\nheaders.forEach((header, i) => {\n  header.addEventListener('click', (e) => {\n    ASC = !ASC;\n\n    if (currentHeader !== i) {\n      ASC = true;\n    }\n    currentHeader = i;\n\n    rows.sort((a, b) => {\n      const cellA = a.querySelectorAll('td')[i].textContent;\n      const cellB = b.querySelectorAll('td')[i].textContent;\n\n      if (Number(numberFormat(cellA))) {\n        return ASC\n          ? numberFormat(cellA) - numberFormat(cellB)\n          : numberFormat(cellB) - numberFormat(cellA);\n      }\n\n      return ASC ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\nconst formFields = {\n  name: {\n    label: 'Name',\n    name: 'name',\n    type: 'text',\n    'data-qa': 'name',\n    validation: {\n      minLength: 4,\n    },\n  },\n  position: {\n    label: 'Position',\n    name: 'position',\n    type: 'text',\n    'data-qa': 'position',\n  },\n  office: {\n    label: 'Office',\n    name: 'office',\n    'data-qa': 'office',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  age: {\n    label: 'Age',\n    name: 'age',\n    type: 'number',\n    'data-qa': 'age',\n    validation: {\n      min: 18,\n      max: 90,\n    },\n  },\n  salary: {\n    label: 'Salary',\n    name: 'salary',\n    type: 'number',\n    'data-qa': 'salary',\n  },\n  startDate: '',\n};\n\nconst numberFormat = (n) => Number(n.replace(/[^0-9.-]+/g, ''));\n\n// Add new employee form\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nfor (const key in formFields) {\n  if (formFields[key]) {\n    const label = document.createElement('label');\n\n    label.textContent = `${formFields[key].label}: `;\n\n    let field = document.createElement('input');\n\n    if (formFields[key].hasOwnProperty('options')) {\n      field = document.createElement('select');\n\n      for (const option of formFields[key].options) {\n        const optionEl = document.createElement('option');\n\n        optionEl.value = option;\n        optionEl.textContent = option;\n        field.appendChild(optionEl);\n      }\n    }\n\n    label.appendChild(field);\n\n    field.setAttribute('name', formFields[key].name);\n    field.setAttribute('type', formFields[key].type);\n    field.setAttribute('data-qa', formFields[key]['data-qa']);\n    field.setAttribute('min', formFields[key].validation?.min);\n    field.setAttribute('max', formFields[key].validation?.max);\n    field.setAttribute('minlength', formFields[key].validation?.minLength);\n    field.setAttribute('required', true);\n    form.appendChild(label);\n  }\n}\n\nconst showNotification = (type, message) => {\n  const notification = document.createElement('div');\n\n  notification.innerHTML = `<h2 class='title'>${message}</h2>`;\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 5000);\n};\n\nconst submitHandler = (e) => {\n  e.preventDefault();\n\n  if (!form.checkValidity()) {\n    showNotification('error', 'Error: Form is not valid');\n\n    return;\n  }\n\n  const formData = new FormData(form);\n  const employee = {};\n\n  for (const [key, value] of formData.entries()) {\n    if (key === 'salary') {\n      employee[key] = currencyFormat(value);\n      continue;\n    }\n    employee[key] = value;\n  }\n\n  const row = document.createElement('tr');\n\n  for (const key in employee) {\n    const cell = document.createElement('td');\n\n    cell.textContent = employee[key];\n    row.appendChild(cell);\n  }\n\n  showNotification('success', 'Employee added successfully');\n\n  tbody.appendChild(row);\n  init();\n\n  form.reset();\n};\n\nconst submit = document.createElement('button');\n\nsubmit.setAttribute('type', 'submit');\nsubmit.setAttribute('form', 'new-employee-form');\nsubmit.addEventListener('click', submitHandler);\n\nsubmit.textContent = 'Save to table';\nform.appendChild(submit);\n\nbody.appendChild(form);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","_non_iterable_spread","TypeError","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","body","document","querySelector","table","headers","querySelectorAll","tbody","rows","init","forEach","row","addEventListener","r","classList","remove","toggle","ASC","header","e","currentHeader","sort","a","b","cellA","textContent","cellB","Number","numberFormat","localeCompare","appendChild","formFields","label","type","validation","minLength","position","office","options","age","min","max","salary","startDate","replace","form","createElement","key","add","concat","field","hasOwnProperty","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_formFields_key_validation","_formFields_key_validation1","_formFields_key_validation2","_step","_iterator","next","done","option","value","optionEl","err","return","setAttribute","showNotification","message","notification","innerHTML","setTimeout","submit","preventDefault","checkValidity","formData","FormData","employee","entries","_step_value","_array_with_holes","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","push","_non_iterable_rest","Intl","NumberFormat","format","key1","cell","reset"],"version":3,"file":"index.8b366593.js.map"}